% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/featureSelection.R
\name{featureSelection}
\alias{featureSelection}
\title{featureSelection function calculates the optimal order of DEGs to achieve the best result in the posterior machine learning process by using mRMR algorithm or Random Forest.}
\usage{
featureSelection(data, labels, vars_selected, mode = "mrmr")
}
\arguments{
\item{data}{The data parameter is an expression matrix or data.frame that contains the genes in the columns and the samples in the rows.}

\item{labels}{A vector or factor that contains the labels for each samples in data parameter.}

\item{vars_selected}{The genes selected to use in the feature selection process. It can be the final DEGs extracted with the function \code{\link{limmaDEGsExtraction}} or a custom vector of genes.}

\item{mode}{The algorithm used to calculate the genes ranking. The possibilities are two: mrmr and rf.}
}
\value{
A vector that contains the ranking of genes.
}
\description{
featureSelection function calculates the optimal order of DEGs to achieve the best result in the posterior machine learning process by using mRMR algorithm or Random Forest. Furthermore, the ranking is returned and can be used as input of the parameter vars_selected in the machine learning functions.
}
\examples{
downloadPublicSeries(c("GSE74251","GSE81593"))

GSE74251 <- read.csv("ReferenceFiles/GSE74251.csv")
GSE81593 <- read.csv("ReferenceFiles/GSE81593.csv")

GSE74251 <- GSE74251[1:5,]
GSE81593 <- GSE81593[8:12,]

dir <- system.file("extdata", package="KnowSeq")

Run <- GSE74251$Run
Path <- paste(dir,"/countFiles/",GSE74251$Run,sep = "")
Class <- rep("Tumor", length(GSE74251$Run))
GSE74251CountsInfo <-  data.frame(Run = Run, Path = Path, Class = Class)

Run <- GSE81593$Run
Path <- paste(dir,"/countFiles/",GSE81593$Run,sep = "")
Class <- rep("Control", length(GSE81593$Run))
GSE81593CountsInfo <-  data.frame(Run = Run, Path = Path, Class = Class)

mergedCountsInfo <- rbind(GSE74251CountsInfo, GSE81593CountsInfo)

write.csv(mergedCountsInfo, file = "ReferenceFiles/mergedCountsInfo.csv")

countsInformation <- countsToMatrix("ReferenceFiles/mergedCountsInfo.csv")

countsMatrix <- countsInformation$countsMatrix
labels <- countsInformation$labels

myAnnotation <- getAnnotationFromEnsembl(rownames(countsMatrix),referenceGenome=37)

expressionMatrix <- calculateGeneExpressionValues(countsMatrix,myAnnotation, genesNames = TRUE)

DEGsInformation <- limmaDEGsExtraction(expressionMatrix, labels, lfc = 2.0,
pvalue = 0.01, number = Inf)

topTable <- DEGsInformation$Table

DEGsMatrix <- DEGsInformation$DEGsMatrix

featureRanking <- featureSelection(t(DEGsMatrix),labels,rownames(DEGsMatrix))
}
