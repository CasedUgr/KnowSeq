% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/svm_test.R
\name{svm_test}
\alias{svm_test}
\title{svm_test allows assessing the final DEGs through a machine learning step by using SVM with a test dataset.}
\usage{
svm_test(train, labelsTrain, test, labelsTest, vars_selected)
}
\arguments{
\item{train}{The train parameter is an expression matrix or data.frame that contains the training dataset with the genes in the columns and the samples in the rows.}

\item{labelsTrain}{A vector or factor that contains the training labels for each of the samples in the train object.}

\item{test}{The test parameter is an expression matrix or data.frame that contains the test dataset with the genes in the columns and the samples in the rows.}

\item{labelsTest}{A vector or factor that contains the test labels for each of the samples in the test object.}

\item{vars_selected}{The genes selected to classify by using them. It can be the final DEGs extracted with the function \code{\link{limmaDEGsExtraction}} or a custom vector of genes. Furthermore, the ranking achieved by \code{\link{featureSelection}} function can be used as input of this parameter.}
}
\value{
A list that contains four objects. The confusion matrix, the accuracy, the sensitibity and the specificity for each genes.
}
\description{
svm_test allows assessing the final DEGs through a machine learning step by using SVM with a test dataset. An optimization of C and G hiperparameters is done at the start of the process.
}
\examples{
dir <- system.file("extdata", package="KnowSeq")

countsInformation <- countsToMatrix(paste(dir,"/countFiles/mergedCountsInfo.csv",sep = ""))

countsMatrix <- countsInformation$countsMatrix
labels <- countsInformation$labels

myAnnotation <- getAnnotationFromEnsembl(rownames(countsMatrix),referenceGenome=37)

expressionMatrix <- calculateGeneExpressionValues(countsMatrix,myAnnotation, genesNames = TRUE)

DEGsInformation <- limmaDEGsExtraction(expressionMatrix, labels, lfc = 2.0,
pvalue = 0.01, number = Inf)

topTable <- DEGsInformation$Table

DEGsMatrix <- DEGsInformation$DEGsMatrix

trainingMatrix <- t(DEGsMatrix)[c(1:4,6:9),]
trainingLabels <- labels[c(1:4,6:9)]
testMatrix <- t(DEGsMatrix)[c(5,10),]
testLabels <- labels[c(5,10)]

svm_test(trainingMatrix,trainingLabels,testMatrix,testLabels,rownames(DEGsMatrix)[1:10])
}
